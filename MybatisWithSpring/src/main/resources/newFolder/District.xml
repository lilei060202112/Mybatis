<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="mapper.DistrictMapper">
    
     <select id="getDistrict" parameterType="long" resultType="common.District" >
     	SELECT "Code", "Name" FROM zh_cn."Region" where
     	<!-- <where> --><!-- 选择谁作为where的条件 -->
     		<!-- <if test="code in 99 "> -->
     			<!-- and  --> <!-- 操作1301类似的 -->
     			SUBSTR(CAST("Code" AS text),1,4) = CAST(#{code} AS TEXT)
		     	and CAST("Code" AS TEXT) != CONCAT(CAST(#{code} AS TEXT),'00')
		     	<!-- 属性，起了个别名 -->
     		<!-- </if>
     		
     		<if test=" code in 999 and code >100">
     			and CAST("Code" AS text) LIKE 
     			CONCAT(SUBSTR(CAST(#{code} AS text),1,4),'%')
		     	and  SUBSTR(CAST(#{code} AS text),4,1) = '0'
		     	and SUBSTR(CAST(#{code} AS text),3,1) != '0'
		     	and "Code" != #{code}
     		</if>
     		
     		<if test=" code >10000 ">
     			and CAST("Code" AS text) LIKE 
     			CONCAT(SUBSTR(CAST(#{code} AS text),1,3),'%')
		     	and SUBSTR(CAST(#{code} AS text),3,1) = '0'
		     	and "Code" != #{code}
     		</if>
     		 
     	</where> -->
       
     </select>
     <select id="getDistrict1" parameterType="long" resultType="common.District" >
     	SELECT "Code", "Name" FROM zh_cn."Region"
			where  <!-- 操作类似131 -->
     			SUBSTR(CAST("Code" AS text),1,4) = CAST(#{code} AS TEXT)
		     	and CAST("Code" AS TEXT) != CONCAT(CAST(#{code} AS TEXT),'00')
		          		    		
     		
     </select>
     <select id="getDistrict2" parameterType="long" resultType="common.District" >
     	SELECT "Code", "Name" FROM zh_cn."Region"<!-- 操作类似13 -->
     			where SUBSTR(CAST("Code" AS text),1,2) = CAST(#{code} AS TEXT)
		     	and CAST("Code" AS TEXT) != CONCAT(CAST(#{code} AS TEXT),'0000')
     		    	      	
       
     </select>
     
  	 <insert id="insertDistrict" parameterType="common.District">
         insert into zh_cn."District" ("Code", city, "Name") 
     	 values (#{Code}, #{city.Code}, #{Name})<!-- 传入的是对象，
     	 那属性名（#{}里面的名称）被自动从传入的对象上查找，和传入基本类型不一样,即使对象的某一属性是对象
     	 那么系统是通过#{city.Code}里的city类反射去调用该类的getCode方法，
     	 如果你写#{city.id}那他去找getID方法 -->
     </insert>
 </mapper>